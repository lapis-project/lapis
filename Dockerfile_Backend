# syntax=docker/dockerfile:1

# using alpine base image to avoid `sharp` memory leaks.
# @see https://sharp.pixelplumbing.com/install#linux-memory-allocator

# base setup
FROM node:20-alpine AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# build
FROM base AS build

WORKDIR /app
RUN chown -R node:node /app

COPY --chown=node:node .npmrc package.json pnpm-lock.yaml pnpm-workspace.yaml ./

RUN sed -i "s/use-node-version/# use-node-version/" .npmrc

RUN pnpm fetch

COPY --chown=node:node ./apps/backend ./apps/backend
RUN sed -i "s/use-node-version/# use-node-version/" .npmrc
RUN pnpm install --frozen-lockfile --offline --filter "backend"

RUN pnpm run build:backend

# serve
FROM base AS serve

WORKDIR /app
RUN chown -R node:node /app

# Copy Command for the backend code
COPY --from=build --chown=node:node /app .

ENV NODE_ENV=production
ENV BACKEND_PORT 3000

USER node
EXPOSE $BACKEND_PORT

CMD ["node", "./apps/backend/dist/index.js"]
